> library("neuralnet")
> 
> #Going to create a neural network to perform prediction
> #Type ?neuralnet for more information on the neuralnet library
> 
> #Generate training data
> #And store them as a dataframe
> traininginput <- as.data.frame(matrix(c(24.3,25600,100,
+                                         16.3,25600,100,
+                                         10.2,51200,160,
+                                         24.3,25600,100,
+                                         16,25600,200,
+                                         24.3,25600,200,
+                                         16,25600,200,
+                                         16,25600,100,
+                                         24.2,51200,200,
+                                         16.84,25600,100,
+                                         16,25600,100,
+                                         24.3,25600,100), nrow=12, ncol=3))
> trainingoutput <- c(2499, 1739, 10299, 1999, 2499, 4999, 3849, 2449, 4399, 1699, 2499, 3495, 189, 369, 319, 399, 200, 269, 159, 419)
> 
> #Column bind the data into one variable
> trainingdata <- cbind(traininginput, trainingoutput)
Error in data.frame(..., check.names = FALSE) : 
  argumenty sugeruja rózna liczbe wierszy: 12, 20
> 
> # Create Vector of ColumnMax and Min Values
> maxs <- apply(trainingdata[,], 2, max)
> mins <- apply(trainingdata[,], 2, min)
> 
> # Use scale() and convert the resulting matrix to a data frame
> scaled.trainingdata <- as.data.frame(scale(trainingdata[,], center=mins, scale=maxs-mins))
> trainingdata <- scaled.trainingdata
> 
> # Check out results
> print(head(trainingdata, 10))
          Input       Output
1  0.5220563733 0.3252490661
2  0.2942962978 0.1459698602
3  0.5259335206 0.3289472958
4  0.7332376881 0.5645109941
5  0.5205860147 0.3238527786
6  0.6820028291 0.4989280112
7  0.3931532245 0.2151334262
8  1.0000000000 1.0000000000
9  0.6264980732 0.4335520909
10 0.6370319339 0.4455227246
> 
> colnames(trainingdata) <- c("rozdzielczosc", "maxCzulosc", "minCzulosc", "Cena") 
Error in names(x) <- value : 
  'names' attribute [4] must be the same length as the vector [2]
> print(trainingdata)
           Input         Output
1  0.52205637332 0.325249066071
2  0.29429629776 0.145969860236
3  0.52593352065 0.328947295839
4  0.73323768805 0.564510994078
5  0.52058601465 0.323852778642
6  0.68200282913 0.498928011243
7  0.39315322447 0.215133426224
8  1.00000000000 1.000000000000
9  0.62649807322 0.433552090886
10 0.63703193393 0.445522724637
11 0.59208341885 0.395818893755
12 0.37457051608 0.201185695882
13 0.83954680712 0.718017807706
14 0.00000000000 0.000000000000
15 0.50125146671 0.305807147808
16 0.80954457592 0.672195184274
17 0.48126585442 0.287758674544
18 0.78278744048 0.633018710521
19 0.27259522573 0.132369726791
20 0.73414253974 0.565716351512
21 0.45941759734 0.268713650888
22 0.95095542614 0.906854793861
23 0.68511613941 0.502766437393
24 0.86289373409 0.755104195759
25 0.74998046240 0.587085931952
26 0.61738977854 0.423362157407
27 0.72315526799 0.551192530066
28 0.48933412440 0.294971878224
29 0.46928025519 0.277223417102
30 0.44567907029 0.257095978767
31 0.07905253563 0.032371886947
32 0.35379162673 0.186122863821
33 0.20708487648 0.094462222920
34 0.00642035307 0.002538302462
35 0.91016390549 0.834168006254
36 0.12666938404 0.053802294902
37 0.68821303005 0.506603128450
38 0.32292549244 0.164754196401
39 0.39685664630 0.217967995204
40 0.63617619793 0.444542775217
41 0.82143520027 0.690112673111
42 0.03991421538 0.015962380528
43 0.09431990172 0.039051950197
44 0.32397779101 0.165463357922
45 0.71133304874 0.535836253301
46 0.95915730287 0.921986566760
47 0.60025691248 0.404592627455
48 0.14480059096 0.062451182228
49 0.49199497091 0.297372331522
50 0.83515462014 0.711181930946
> 
> #Train the neural network
> #Going to have C(5, 4, 3) hidden layers
> #Threshold is a numeric value specifying the threshold for the partial
> #derivatives of the error function as stopping criteria.
> net.price <- neuralnet(Cena~rozdzielczosc+maxCzulosc+minCzulosc, trainingdata, hidden=c(5, 4, 3), threshold=0.001)
Error in eval(predvars, data, env) : object 'Cena' not found
> print(net.price)
$call
neuralnet(formula = Cena ~ rozdzielczosc + maxCzulosc + minCzulosc, 
    data = trainingdata, hidden = c(5, 4, 3), threshold = 0.001)

$response
              Cena
1  0.0433070866142
2  0.0866141732283
3  0.0748031496063
4  0.0551181102362
5  0.0551181102362
6  0.0003937007874
7  0.1338582677165
8  0.0393700787402
9  1.0000000000000
10 0.1023622047244
11 0.0433070866142
12 0.1299212598425
13 0.0118110236220
14 0.0826771653543
15 0.0629921259843
16 0.0944881889764
17 0.0161417322835
18 0.0433070866142
19 0.0000000000000
20 0.1023622047244

$covariate
                [,1]          [,2]          [,3]
 [1,] 0.788519637462 0.36868686869 0.06060606061
 [2,] 0.027190332326 0.49494949495 0.59595959596
 [3,] 0.425981873112 0.03282828283 0.93265993266
 [4,] 0.758308157100 0.36868686869 0.08080808081
 [5,] 0.006042296073 1.00000000000 0.52861952862
 [6,] 0.395770392749 0.43939393939 1.00000000000
 [7,] 0.607250755287 0.29292929293 0.02020202020
 [8,] 0.000000000000 0.19191919192 0.42760942761
 [9,] 0.395770392749 0.22979797980 0.73063973064
[10,] 0.697885196375 0.44444444444 0.09090909091
[11,] 0.015105740181 0.11616161616 0.42760942761
[12,] 0.305135951662 0.00000000000 0.59595959596
[13,] 0.667673716012 0.44444444444 0.06734006734
[14,] 0.048338368580 0.97474747475 0.59595959596
[15,] 0.365558912387 0.12929292929 0.05723905724
[16,] 0.546827794562 0.39393939394 0.00000000000
[17,] 0.000000000000 0.46969696970 0.56228956229
[18,] 0.305135951662 0.01085858586 1.00000000000
[19,] 1.000000000000 0.39393939394 0.02020202020
[20,] 0.096676737160 0.44444444444 0.42760942761

$model.list
$model.list$response
[1] "Cena"

$model.list$variables
[1] "rozdzielczosc" "maxCzulosc"    "minCzulosc"   


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x0000000009bedb98>
<environment: 0x000000000df83900>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x0000000009bed0d0>
<environment: 0x000000000df83900>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
    rozdzielczosc    maxCzulosc    minCzulosc            Cena
1  0.788519637462 0.36868686869 0.06060606061 0.0433070866142
2  0.027190332326 0.49494949495 0.59595959596 0.0866141732283
3  0.425981873112 0.03282828283 0.93265993266 0.0748031496063
4  0.758308157100 0.36868686869 0.08080808081 0.0551181102362
5  0.006042296073 1.00000000000 0.52861952862 0.0551181102362
6  0.395770392749 0.43939393939 1.00000000000 0.0003937007874
7  0.607250755287 0.29292929293 0.02020202020 0.1338582677165
8  0.000000000000 0.19191919192 0.42760942761 0.0393700787402
9  0.395770392749 0.22979797980 0.73063973064 1.0000000000000
10 0.697885196375 0.44444444444 0.09090909091 0.1023622047244
11 0.015105740181 0.11616161616 0.42760942761 0.0433070866142
12 0.305135951662 0.00000000000 0.59595959596 0.1299212598425
13 0.667673716012 0.44444444444 0.06734006734 0.0118110236220
14 0.048338368580 0.97474747475 0.59595959596 0.0826771653543
15 0.365558912387 0.12929292929 0.05723905724 0.0629921259843
16 0.546827794562 0.39393939394 0.00000000000 0.0944881889764
17 0.000000000000 0.46969696970 0.56228956229 0.0161417322835
18 0.305135951662 0.01085858586 1.00000000000 0.0433070866142
19 1.000000000000 0.39393939394 0.02020202020 0.0000000000000
20 0.096676737160 0.44444444444 0.42760942761 0.1023622047244

$net.result
$net.result[[1]]
              [,1]
1   0.058205641136
2   0.046970905398
3   0.100498008074
4   0.062677288886
5   0.074051447344
6   0.004924297104
7   0.115353070145
8   0.039345018439
9   0.997857646680
10  0.050532247586
11  0.043022163637
12  0.089534430841
13  0.058071680811
14  0.074896399499
15  0.064727693964
16  0.100179997930
17  0.047795401560
18  0.058823363709
19 -0.006440081535
20  0.096398156432


$weights
$weights[[1]]
$weights[[1]][[1]]
             [,1]          [,2]          [,3]           [,4]          [,5]
[1,] -0.879263319 -0.6202845015   1.112686548 -1.79196965791 -5.5213859343
[2,] -3.632691879  7.8464719034  -1.961217030 -4.38933164450  1.0560785515
[3,] 10.942949681  4.7985924585 -12.219067671 -0.06606416007 13.3493001691
[4,] -1.976551116 -2.1058208396   2.529060432 11.17208497350  0.5617406267

$weights[[1]][[2]]
              [,1]          [,2]          [,3]           [,4]
[1,]  0.5105845715 -0.3343421888  0.3738777085  0.04564008576
[2,]  6.1964202945 -4.4460229994 11.7427283912  1.96662536091
[3,]  6.5799353427 -0.2542522568  0.4312954378  1.94615014523
[4,] -6.6383737735 -0.5349160101 -1.7182883019 -5.90358631440
[5,] -2.8370647886  3.3604944442 -6.5344114597  0.51919791279
[6,]  6.5508537405 -5.4812997760  6.4584847504 -2.77632228947

$weights[[1]][[3]]
              [,1]           [,2]           [,3]
[1,]  0.2032958807 -0.25196560653 -1.67610369757
[2,]  0.9088729578 -1.64571003917  0.67035184963
[3,]  0.5042411165 -0.02619382674 -4.41177472148
[4,] -0.9618050981  2.18336839819 -0.08310128371
[5,]  1.2167555161 -0.53945993965 -1.54180020035

$weights[[1]][[4]]
               [,1]
[1,]  0.02065816878
[2,]  1.38175214138
[3,] -2.04662848786
[4,] -0.70769978204



$startweights
$startweights[[1]]
$startweights[[1]][[1]]
              [,1]          [,2]           [,3]          [,4]          [,5]
[1,] -0.9573777793  0.9034891932  1.35824745434 -1.3937669894 -1.5487668091
[2,]  0.6296161615 -0.2040877096 -0.69571677784  0.6699291748 -1.0271862173
[3,]  2.1826056317  1.7338123646  0.09897973584  1.4694445825  0.7377230410
[4,] -1.0199684253 -1.0553408275 -1.01390032427  1.1729053892  0.5320328918

$startweights[[1]][[2]]
              [,1]          [,2]          [,3]          [,4]
[1,]  1.2157537027 -0.4035875512  0.2719438194  0.1523363954
[2,]  1.6441517415 -1.2730219881  1.7911621162  0.4320038366
[3,]  1.2885754323 -0.4724478828 -0.7023457644  2.0670518256
[4,]  0.5833869778 -0.7190153857 -1.8522575293 -0.6462400324
[5,] -1.7576931109  0.5031863742 -0.7087456771  0.7929680493
[6,]  1.5449145990 -2.3070573322  0.5606078649 -0.3066957496

$startweights[[1]][[3]]
              [,1]          [,2]          [,3]
[1,]  0.3194649124 -0.3676860195 -1.7786366619
[2,]  1.0250205798 -1.7611769340  0.5678904057
[3,] -0.7264282253 -0.1336775254  0.1108216163
[4,] -0.5766389222  0.3587634626 -0.4325000343
[5,]  1.3298176892 -0.6493984029 -1.6410723521

$startweights[[1]][[4]]
              [,1]
[1,]  0.0537654255
[2,]  0.6558735652
[3,] -1.8613018987
[4,] -0.6051598939



$generalized.weights
$generalized.weights[[1]]
             [,1]           [,2]            [,3]
1   -4.5177696339  -6.5038420346  -2.64985735410
2    7.4007099628  -2.2922524668  -4.13797705604
3    5.1801325075   7.5719303204  -2.17363343580
4   -4.0633679151  -5.8638511436  -2.37111121772
5    0.7812301568   0.5052371996  -0.08925123929
6   -1.4857818069  88.0777714228 -67.44961886061
7   -1.1261668958  -1.3333541029  -0.88730966109
8  130.1800140472   9.6930212391  -0.63223247108
9  223.0180737963 -79.5566996440 -90.46488961534
10  -3.9005209949  -5.9197685393  -2.02113209338
11  50.0272496501  13.4776171655  -0.28585838440
12   5.2231305533   8.0694753477  -2.29028854121
13  -3.0637702254  -5.8526857988  -1.61929035208
14   0.7393474440   0.4672263952  -0.13286389294
15   8.4030261009  14.0593035123  -0.48076404959
16  -1.3548675358  -4.1369956994  -0.82692510310
17   7.7777590066  -3.7313688740  -4.67828444051
18   1.6205364918   1.4742760463  -0.56856114661
19  51.3943218570  55.3301075431  29.12011418849
20   1.3967038615  -3.1658924258  -1.06216853758


$result.matrix
                                          1
error                       0.0055551130507
reached.threshold           0.0008157663453
steps                     774.0000000000000
Intercept.to.1layhid1      -0.8792633189506
rozdzielczosc.to.1layhid1  -3.6326918785168
maxCzulosc.to.1layhid1     10.9429496807717
minCzulosc.to.1layhid1     -1.9765511156559
Intercept.to.1layhid2      -0.6202845015308
rozdzielczosc.to.1layhid2   7.8464719033624
maxCzulosc.to.1layhid2      4.7985924585483
minCzulosc.to.1layhid2     -2.1058208396218
Intercept.to.1layhid3       1.1126865479016
rozdzielczosc.to.1layhid3  -1.9612170304365
maxCzulosc.to.1layhid3    -12.2190676709496
minCzulosc.to.1layhid3      2.5290604321556
Intercept.to.1layhid4      -1.7919696579074
rozdzielczosc.to.1layhid4  -4.3893316445003
maxCzulosc.to.1layhid4     -0.0660641600722
minCzulosc.to.1layhid4     11.1720849734983
Intercept.to.1layhid5      -5.5213859342546
rozdzielczosc.to.1layhid5   1.0560785515033
maxCzulosc.to.1layhid5     13.3493001691360
minCzulosc.to.1layhid5      0.5617406266756
Intercept.to.2layhid1       0.5105845715266
1layhid.1.to.2layhid1       6.1964202944580
1layhid.2.to.2layhid1       6.5799353427344
1layhid.3.to.2layhid1      -6.6383737734784
1layhid.4.to.2layhid1      -2.8370647886135
1layhid.5.to.2layhid1       6.5508537404562
Intercept.to.2layhid2      -0.3343421888158
1layhid.1.to.2layhid2      -4.4460229994266
1layhid.2.to.2layhid2      -0.2542522568470
1layhid.3.to.2layhid2      -0.5349160101044
1layhid.4.to.2layhid2       3.3604944442155
1layhid.5.to.2layhid2      -5.4812997759831
Intercept.to.2layhid3       0.3738777085042
1layhid.1.to.2layhid3      11.7427283912392
1layhid.2.to.2layhid3       0.4312954377753
1layhid.3.to.2layhid3      -1.7182883018695
1layhid.4.to.2layhid3      -6.5344114597450
1layhid.5.to.2layhid3       6.4584847504345
Intercept.to.2layhid4       0.0456400857584
1layhid.1.to.2layhid4       1.9666253609062
1layhid.2.to.2layhid4       1.9461501452345
1layhid.3.to.2layhid4      -5.9035863143990
1layhid.4.to.2layhid4       0.5191979127939
1layhid.5.to.2layhid4      -2.7763222894722
Intercept.to.3layhid1       0.2032958806735
2layhid.1.to.3layhid1       0.9088729578446
2layhid.2.to.3layhid1       0.5042411165149
2layhid.3.to.3layhid1      -0.9618050980888
2layhid.4.to.3layhid1       1.2167555161064
Intercept.to.3layhid2      -0.2519656065276
2layhid.1.to.3layhid2      -1.6457100391735
2layhid.2.to.3layhid2      -0.0261938267399
2layhid.3.to.3layhid2       2.1833683981920
2layhid.4.to.3layhid2      -0.5394599396486
Intercept.to.3layhid3      -1.6761036975684
2layhid.1.to.3layhid3       0.6703518496282
2layhid.2.to.3layhid3      -4.4117747214825
2layhid.3.to.3layhid3      -0.0831012837069
2layhid.4.to.3layhid3      -1.5418002003529
Intercept.to.Cena           0.0206581687828
3layhid.1.to.Cena           1.3817521413820
3layhid.2.to.Cena          -2.0466284878608
3layhid.3.to.Cena          -0.7076997820358

attr(,"class")
[1] "nn"
> 
> #Plot the neural network
> plot(net.price)
> 
> #Test the neural network on some training data
> testdata <- as.data.frame(matrix(c(16,25600,200,
+                                    24.3,25600,200,
+                                    16,25600,200), nrow=3, ncol=3))
> scaled.testdata <- as.data.frame(scale(testdata[,], center=mins[1:3], scale=maxs[1:3]-mins[1:3]))
> net.results <- compute(net.price, scaled.testdata) #Run them through the neural network
> 
> #Lets see what properties net.price has
> ls(net.results)
[1] "net.result" "neurons"   
> 
> #Lets see the results
> print(net.results$net.result)
     [,1]
[1,]   NA
[2,]   NA
[3,]   NA